.TH order 1W "1996.5.24" "WIN SYSTEM" "WIN SYSTEM"
.SH 名称
order - 共有メモリ中の win 形式データの時間順整列
.SH 形式
order
.I inkey
.I outkey
.I shmsize
.I limit
[
.I logfile
]
.LP
.SH 解説
order は、キー
.I \ inkey
の共有メモリ・セグメントに書き込まれている、時間順に整列されて
いない、「書き込み時刻」付きの win 形式のデータを、時間順に
整列させて、キー
.I \ outkey
で与えられる共有メモリ・セグメントに書き込みます。キー
.I \ outkey
をもつ共有メモリ・セグメントが存在しない場合は、大きさ
.I \ shmsize
\ (KB) の共有メモリ・セグメントが作られます。すでに存在している場合は、
そのサイズが
.I \ shmsize
\ (KB) よりも小さいとエラーになります。
共有メモリ・キーは32ビットの整数値です。
.LP
入力側共有メモリにデータを書き込むのは、通常 recvt(1W) プロセスです。
order は、データを整列させる際に、「現在時刻から過去
.I \ limit
秒間に入力側共有メモリに書き込まれたデータの中から、まだ
出力側にコピーされていない、最も古い時刻のデータ」を集めて
出力側共有メモリにコピーしていきます。結果的に、同じ（データの）
時刻ラベルをもつデータパケットのうち、最も早く到着したデータよりも
.I \ limit
秒以上遅れて到着したデータは、出力されずに読み捨てられることに
なります。したがって入力側共有メモリは、データが最も膨らんだ
ときでも、少なくとも
.I \ limit
秒分の win 形式データを蓄積できる容量がなければなりません。
.LP
一方
.I \ limit
の秒数は、さまざまな系統から入力側に到着するデータパケットがもちうる、
実時間からの遅延時間の幅を考慮して決定される必要があります。
.LP
order の入力側と出力側の間では、最大
.I \ limit
秒の遅延時間が発生することになります。また出力されるデータは、
実時間から少なくとも
.I \ limit
秒遅延しています。
.LP
ログファイル名
.I \ logfile
を指定すると、ここに動作ログがとられ、
指定しないとログ情報は標準出力に
送られます。ログファイルは書き込みのたび毎に
オープン／クローズされます。
.LP
order は引数なしで起動すると簡単な使用法を表示します。
.SH 入力側共有メモリ上の形式
recvt(1W) を参照してください。
.SH 出力側共有メモリ上の形式
order が共有メモリに書き込むデータは、１秒分ずつのブロック形式です。
１ブロックの構造は次のようになっています。

.nf
     (1)４バイトのブロックサイズ（バイト）
     (2)６バイトの時刻ヘッダー（年〜秒、各１バイト、BCD形式）
          年の下２桁(00〜99)、月(01〜12)、日(01〜31)、
          時(00〜23)、分(00〜59)、秒(00〜59)
     (3)同時刻の１チャネル分以上のデータ（win形式）
.fi

共有メモリ・セグメント全体は、次のような構造体になっています。
.nf

     struct Shm {
       unsigned long p;         /* write point */
       unsigned long pl;        /* write limit */
       unsigned long r;         /* latest */
       unsigned long c;         /* counter */
       unsigned char d[SIZE];   /* data buffer */
       } *sh;

.fi
p, pl, r, c は管理用の変数、d がデータの領域で、これらはすべて
１つの書き込み側プロセスによって書き込まれます。読み出し側プロセスは
これらの変数を使って同期をとって、データを読み出します。
.TP
p
現在書き込み中のブロックの先頭位置（d の先頭からのバイト数）。
.TP
pl
ここを越えては新しい秒ブロックに入らず、先頭に戻る位置（d の先頭から
のバイト数）。これは共有メモリセグメントの大きさの90%の位置に
とられます。最後の秒ブロックはこの位置を越えて書き込まれますが、
そのブロックは、共有メモリセグメントの終端までには終わらなければ
なりません。したがって、共有メモリセグメントの大きさは、少なくとも、
最大の１秒ブロックの大きさの10倍以上である必要があります。
.TP
r
最後に書き込み完了したブロックの先頭位置（d の先頭から
のバイト数）。
.TP
c
これまでに書き込んだブロック数の積算値。
.SH オプション
.TP 
なし
.SH ソース
.TP 
`order.c'
.SH 関連事項
winformat(1W), recvt(1W)
