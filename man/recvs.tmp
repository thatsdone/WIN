.TH recvts1W "2000.4.11" "WIN SYSTEM" "WIN SYSTEM"
.SH 名称
recvs - シリアルポートから種別つきデータを受信
.SH 形式
recvs [-a] [-s] [-i my_ID] [-p host:port] [-b rate]
.I device
.I shmkey
.I shmsize
[
.I logfile
]
.LP
.SH 解説
recvs は、デバイス名 device のシリアルポートへ
送られるパケット種別付き win 形式のデータを受信し、キー
.I \ shmkey
で与えられる共有メモリ・セグメントに（巡回的に）書き込みます。
そのキーをもつ共有メモリ・セグメントが存在しない場合は、大きさ
.I \ shmsize
\ (KB) の共有メモリ・セグメントが作られます。すでに存在している場合は、
そのサイズが
.I \ shmsize
\ (KB) よりも小さいとエラーになります。
recvs がサポートしているシリアルポートのデバイスは、Solarisのzshデバイス
(/dev/zsh?) およびSolaris上のAurora Technologies社製マルチポート同期
シリアルボードの /dev/hdlcdrv/? デバイスです。
.LP
ログファイル名
.I \ logfile
を指定すると、ここに動作ログがとられ、指定しないとログ情報は標準出力に
送られます。ログファイルは書き込みのたび毎にオープン／クローズされます。
.LP
recvs は引数なしで起動すると簡単な使用法を表示します。
.SH シリアル回線上のデータ形式
recvs が受信することのできる、パケット種別付きデータの形式は
以下のようなものです(詳しくは白山工業「データ変換装置LT8500通信プロトコル」を
見てください)。
データはシリアル回線上を HDLCフレームで伝送されます。
.nf

    (1)２バイトの送信局アドレス
    (2)１バイトのパケット番号(0〜255)
    (3)１バイトの「元の」パケット番号(0〜255)
    (4)１バイトのパケット識別コード
    (5)６バイトの時刻ヘッダー（年〜秒、各１バイト、BCD形式）
         西暦年の下２桁(00〜99)、月(01〜12)、日(01〜31)、
         時(00〜23)、分(00〜59)、秒(00〜59)
    (6)データ（win形式の1つまたは複数のチャネルブロック）

.fi
です。
(1)は送信局を識別するための番号で、上位バイト、下位バイトの順です。
(2)は送信元が
各パケットにつける、１ずつ増える番号です（255の次は0に戻ります）。
(3)には通常(2)と等しい値が入っていますが、再送パケットの場合には、
(2)には再送要求された元のパケットの番号が入っていて、それが
再送パケットであることを示します。
(4)には、"A1"(短周期データ)、"A2"(長周期データ)、"A8"
(データ変換装置設定情報)、"A9"(データ変換装置動作情報)等が
あります。
.SH 再送プロトコル
送信側は発生したデータを上記の形式で HDLC フレームに入れて
送り出します。受信側はパケット番号を
監視していて、欠落したパケットの番号を送信元に送ることによって、
そのパケットの再送を要求します。
再送要求パケットは、相手の送信局アドレス(２バイト)と再送して欲しい
パケット番号を内容とする、長さ３バイトのパケットです。
送信元は再送要求されたパケットを
送り直します。通常の実装では、送信プロセスは過去最大128パケット
まで遡った再送に応え、受信プロセスは最大64パケットの連続した
欠落までを再送要求します。
.SH 共有メモリ上の形式
recvt が共有メモリに書き込むデータは、１秒分ずつのブロック形式です。
１ブロックの構造は次のようになっています。
.nf

    (1)４バイトのブロックサイズ（バイト）
    (2)４バイトの「書き込み時刻」
    (3)６バイトの時刻ヘッダー（年〜秒、各１バイト、BCD形式）
         年の下２桁(00〜99)、月(01〜12)、日(01〜31)、
         時(00〜23)、分(00〜59)、秒(00〜59)
    (4)同時刻の１チャネル分以上のデータ（win形式）

.fi
(2)は1970年1月1日0時から数えた秒数で示され、order(1W) が
データを時間順に整列させるときに、タイムアウトを設定するのに
利用されます。共有メモリ
・セグメント全体は、次のような構造体になっています。
.nf

   struct Shm {
     unsigned long p;         /* write point */
     unsigned long pl;        /* write limit */
     unsigned long r;         /* latest */
     unsigned long c;         /* counter */
     unsigned char d[SIZE];   /* data buffer */
     } *sh;

.fi
p, pl, r, c は管理用の変数、d がデータの領域で、これらはすべて
１つの書き込み側プロセスによって書き込まれます。読み出し側プロセスは
これらの変数を使って同期をとって、データを読み出します。
.TP
p
現在書き込み中のブロックの先頭位置（d の先頭からのバイト数）。
.TP
pl
ここを越えては新しい秒ブロックに入らず、先頭に戻る位置（d の先頭から
のバイト数）。これは共有メモリセグメントの大きさの90%の位置に
とられます。最後の秒ブロックはこの位置を越えて書き込まれますが、
そのブロックは、共有メモリセグメントの終端までには終わらなければ
なりません。したがって、共有メモリセグメントの大きさは、少なくとも、
最大の１秒ブロックの大きさの10倍以上である必要があります。
.TP
r
最後に書き込み完了したブロックの先頭位置（d の先頭から
のバイト数）。
.TP
c
これまでに書き込んだブロック数の積算値。
.LP
recvt は、連続して受け取ったデータパケットの
時刻が同じである限り、共有メモリ上の１つのデータブロックを
拡張していきます。従って受信したパケットと共有メモリ上のデータ
ブロックは必ずしも１対１には対応せず、同じ時刻の複数のパケットは、
１つのデータブロックにまとめられます。
.SH オプション
.TP 
なし
.SH ソース
.TP 
`recvt.c'
.SH 関連事項
winformat(1W), send_raw(1W), sendt_raw(1W), send_mon(1W),
sendt_mon(1W), relay(1W)
